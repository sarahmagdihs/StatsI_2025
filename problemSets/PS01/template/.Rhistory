y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
sample_n <- length(y)
sample_mean <- mean(y)
sample_sd <- sd(y)
#standard deviation could also be calculated step-by-step but honestly I dont see the point of doing that, I know the formula is s = sqrt(sum(x_underscore_i-mean)^2/n-1)
t_score <- qt(0.05, 24)
t_score <- qt(0.05, 24, lower.tail = FALSE)
upper_90 <- sample_mean + t_score*(sample_sd/sqrt(sample_n))
CI_90 <- c(lower_90, upper_90)
lower_90 <- sample_mean - t_score*(sample_sd/sqrt(sample_n))
CI_90 <- c(lower_90, upper_90)
print(CI_90)
#alternatively
CI(y,ci=0.90)
t.test(y, conf.level = 0.90)
?t.test
t.test(y,alternative = c("greater"), mu =100, conf.level = 0.95 )
t.test(y,alternative = c("two.sided"), mu =100, conf.level = 0.95 )
t.test(y,alternative = c("greater"), mu =100, conf.level = 0.95 )
expenditure <- read.table("https://raw.githubusercontent.com/ASDS-TCD/StatsI_2025/main/datasets/expenditure.txt", header=T)
View(expenditure)
View(expenditure)
