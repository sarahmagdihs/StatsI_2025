y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
sample_n <- length(y)
sample_mean <- mean(y)
sample_sd <- sd(y)
#standard deviation could also be calculated step-by-step but honestly I dont see the point of doing that, I know the formula is s = sqrt(sum(x_underscore_i-mean)^2/n-1)
t_score <- qt(0.05, 24)
t_score <- qt(0.05, 24, lower.tail = FALSE)
upper_90 <- sample_mean + t_score*(sample_sd/sqrt(sample_n))
CI_90 <- c(lower_90, upper_90)
lower_90 <- sample_mean - t_score*(sample_sd/sqrt(sample_n))
CI_90 <- c(lower_90, upper_90)
print(CI_90)
#alternatively
CI(y,ci=0.90)
t.test(y, conf.level = 0.90)
?t.test
t.test(y,alternative = c("greater"), mu =100, conf.level = 0.95 )
t.test(y,alternative = c("two.sided"), mu =100, conf.level = 0.95 )
t.test(y,alternative = c("greater"), mu =100, conf.level = 0.95 )
expenditure <- read.table("https://raw.githubusercontent.com/ASDS-TCD/StatsI_2025/main/datasets/expenditure.txt", header=T)
View(expenditure)
View(expenditure)
setwd("~/Documents/GitHub/StatsI_2025/problemSets/PS01/my_answers")
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#Task 1 - Short version = t.test
t.test(y, conf.level = .90)
n <- length(y)
mean_y <- mean(y)
sd_y <- sd(y)
se_y <- sd_y/sqrt(n)
t_score <- qt(0.05, 24, lower.tail = FALSE)
t_score
upper90 <- mean + t_score*se_y
upper90 <- mean_y + t_score*se_y
lower90 <- mean_y - t_score*se_y
CI90 <- c(lower90, upper90)
CI90
t.test(y, conf.level = .90)
#CI
upper90 <- mean_y + t_score*se_y
lower90 <- mean_y - t_score*se_y
CI90 <- c(lower90, upper90)
t_score2 <- qt(0.05, 24)
t_score <- qt(0.95, 24)
t.test(y, mu = 100, alternative = "greater", conf.level = 0.95)
# longer way
TS <- (mean_y-100)/se_y
pt(q=TS, df = 24)
1- pt(q=TS, df = 24)
1-pt(q=TS, df = 24)
expenditure <- read.table("https://raw.githubusercontent.com/ASDS-TCD/StatsI_2025/main/datasets/expenditure.txt", header=T)
View(expenditure)
View(expenditure)
?scatterplot
?scatterplot
??scatterplot
head(expenditure)
str(expenditure)
#Please plot the relationships among Y, X1, X2, and X3 ? What are the correlations among them (you just need to describe the graph and the relationships among them)?
?pairs
[1,1]
expenditure[1,1]
expenditure[49,5] #5th element of the 49th row
expenditure[1] #indexing in a matrix
expenditure[,1] #indexing in a matrix
expenditure[,c(2,3,4,5)] # how to do multiple columns
pairs(expenditure[,c(2,3,4,5)])
#check
plot(x = expenditure$Y, y= expenditure$X1 )
#task 2
?boxplot
#task 2
plot(x = expenditure$Y, y= expenditure$Region)
boxplot(x= expenditure$Region, y=expenditure$Y)
?boxplot
str(expenditure)
#issue region is an integer
expenditure$Region =as.factor(expenditure$Region)
View(expenditure)
expenditure
str(expenditure)
boxplot( Y ~ Region)
boxplot(expenditure$Y ~ Region)
boxplot(formula=expenditure$Y ~ Region)
boxplot(formula=expenditure$Y ~ expenditure$Region)
boxplot(expenditure$Y ~ expenditure$Region)
boxplot
boxplot(expenditure$Y ~ expenditure$Region)
?boxplot
